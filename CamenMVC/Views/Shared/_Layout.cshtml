@using System;
@using System.Collections.Generic;
@using System.Data;
@using System.Data.Entity;
@using System.Linq;
@using System.Net;
@using System.Web;
@using System.Web.Mvc;
@using CamenMVC.Models;
@using Microsoft.AspNet.Identity;
@using System.Web.Security;

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - CAMEN Web-Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>

</head>
<body>
@{
    ApplicationDbContext db = new ApplicationDbContext();
    var cl = "";
    if (User.IsInRole("Admin"))
    {
        cl = "navbar navbar-inverse navi1";
    }
    else
    {
        cl = "navbar navbar-fixed-top navbar-inverse navi1";
    }

    <div class="@cl">
        <a href="@Url.Action("Index", "Home")" class="pull-left"><img class="img-logo-header" src="~/Content/Immagini/LogoHeaderBianco.png" /></a>
        <div class="pull-right">@Html.Partial("_LoginPartial")</div>
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
            </div>
            <div class="navbar-collapse collapse">
                @if (User.Identity.IsAuthenticated)
                {
                    <ul class="nav navbar-nav btn-group">

                        @*Inizio gruppo menu autenticati*@
                        @if (User.IsInRole("Admin"))
                        {
                            //Inizio barra menu amministratore
                            var menu = db.Menus.OrderBy(n => n.Posizione).ToList();
                            foreach (var item in menu)
                            {
                                <li>
                                    <span>
                                        @*Se non esistono sottomenu abilito il tasto elimina*@
                                        @if (item.SottoMenus.Count() == 0)
                                        {
                                            @Html.ActionLink(" ", "Delete", "Menus", new { id = item.Menu_Id }, new { @class = " glyphicon glyphicon-remove text-danger" })
                                        }
                                        @Html.ActionLink(" ", "Edit", "Menus", new { id = item.Menu_Id }, new { @class = " glyphicon glyphicon-pencil" })
                                    </span>
                                    @*Se il menu non è pubblicato lo scrivo in rosso*@
                                    @if (@item.Pubblica == true)
                                    {
                                        <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown">@item.TestoMenu<b class="caret"></b></a>
                                    }
                                    else
                                    {
                                        <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown"><b class="text-danger">@item.TestoMenu</b><b class="caret"></b></a>
                                    }
                                    @*Inizio barra sottomenu amministratore*@
                                    <ul class="dropdown-menu" role="menu">
                                        @foreach (var item1 in item.SottoMenus.OrderBy(o=>o.Posizione))
                                        {
                                            if (item1.Pubblica == true)
                                            {
                                                <c><li>@Html.ActionLink(" ", "Edit", "Sottomenus", new { id = item1.Smenu_Id }, new { @class = " glyphicon glyphicon-pencil" })<a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })">@item1.TestoSmenu</a></li></c>

                                            }
                                            else
                                            {
                                                <c><li>@Html.ActionLink(" ", "Edit", "Sottomenus", new { id = item1.Smenu_Id }, new { @class = " glyphicon glyphicon-pencil" })<a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })"><b class="text-danger">@item1.TestoSmenu</b> </a></li></c>
                                            }
                                        }
                                        <c>
                                            <li>
                                                <hr class="hr1" />
                                                <a class="glyphicon glyphicon-plus" href="@Url.Action("Create1", "SottoMenus", new { menu = item.Menu_Id })"></a>
                                            </li>
                                        </c>
                                    </ul>
                                    @*Fine barra sottomenu amministratore*@
                                </li>
                            }
                            <li>
                                <a class="glyphicon glyphicon-plus" href="@Url.Action("Create", "Menus")"></a>
                            </li>
                            <li>
                                <a href="@Url.Action("IndexUt", "Documentis")" class="fa fa-file-pdf-o fa-2x" title="documenti download"></a>
                            </li>
                        }
                        else
                        {

                            if (User.IsInRole("Insegnante"))
                            {
                                //Inizio barra menu insegnante
                                var menu = db.Menus.Include(e => e.MenuRuoli).Where(n => n.Pubblica == true && n.Ruolo == "Insegnante").OrderBy(n => n.Posizione).ToList();
                                foreach (var item in menu)
                                {
                                    <li>
                                        <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown">@item.TestoMenu<b class="caret"></b></a>
                                        @*Inizio barra sottomenu insegnante*@
                                       <ul class="dropdown-menu" role="menu">
                                            @foreach (var item1 in item.SottoMenus.OrderBy(o => o.Posizione))
                                            {
                                                if (item1.Pubblica == true)
                                                {
                                                    <li>
                                                        <a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })">@item1.TestoSmenu </a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                            if (User.IsInRole("Studente"))
                            {
                                //Inizio barra menu studente
                                var menu = db.Menus.Include(e => e.MenuRuoli).Where(n => n.Pubblica == true && n.Ruolo == "Studente").OrderBy(n => n.Posizione).ToList();
                                foreach (var item in menu)
                                {
                                    <li>
                                        <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown">@item.TestoMenu<b class="caret"></b></a>
                                        @*Inizio barra sottomenu studente*@
                                       <ul class="dropdown-menu" role="menu">
                                            @foreach (var item1 in item.SottoMenus.OrderBy(o => o.Posizione))
                                            {
                                                if (item1.Pubblica == true)
                                                {
                                                    <li>
                                                        <a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })">@item1.TestoSmenu </a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                            if (User.IsInRole("Segreteria"))
                            {
                                //Inizio barra menu segreteria
                                var menu = db.Menus.Include(e => e.MenuRuoli).Where(n => n.Pubblica == true && n.Ruolo == "Segreteria").OrderBy(n => n.Posizione).ToList();
                                foreach (var item in menu)
                                {
                                    <li>
                                        <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown">@item.TestoMenu<b class="caret"></b></a>
                                        @*Inizio barra sottomenu segreteria*@
                                       <ul class="dropdown-menu" role="menu">
                                            @foreach (var item1 in item.SottoMenus.OrderBy(o => o.Posizione))
                                            {
                                                if (item1.Pubblica == true)
                                                {
                                                    <li>
                                                        <a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })">@item1.TestoSmenu </a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                            <li>
                                <a href="@Url.Action("IndexUt", "Documentis")" class="fa fa-file-pdf-o fa-2x" title="documenti download"></a>
                            </li>
                        }
                    </ul>
                }
               @*Fine gruppo menu autenticati*@
               @*Inizio barra sottomenu utenti anonimi*@
                else
                {
                    var menu1 = db.Menus.Include(e => e.MenuRuoli).Where(n => n.Pubblica == true && (n.Ruolo == "Anonimous" | n.Ruolo == null)).OrderBy(n => n.Posizione).ToList();
                   <ul class="nav navbar-nav btn-group">
                        @foreach (var item in menu1)
                        {
                            <li>
                                <a href="#nogo" class="dropdown-toggle" data-toggle="dropdown">@item.TestoMenu<b class="caret"></b></a>
                                @*Inizio barra sottomenu anonimo*@
                               <ul class="dropdown-menu" role="menu">
                                    @foreach (var item1 in item.SottoMenus.OrderBy(o => o.Posizione))
                                    {
                                        if (item1.Pubblica == true)
                                        {
                                            <li>
                                                <a href="@Url.Action("IndexUt", "Paginas", new { id = @item1.Smenu_Id })">@item1.TestoSmenu </a>
                                            </li>
                                        }
                                    }
                                </ul>
                            </li>
                        }
                           <li>
                           <a href="@Url.Action("IndexUt", "Documentis")" class="fa fa-file-pdf-o fa-2x" title="documenti download"></a>
                           </li>
                    </ul>
                }



                    @*Fine barra menu utenti anonimi*@
</div>
        </div>
    </div>
}

@*Inizio barra amministratore bottom - gestione utenti ruoli menu splash documenti*@
@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="navbar navbar-inverse navbar-fixed-bottom navi">
        <div class="container">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav btn-group">
                    <li><div><a href="@Url.Action("Index", "RolesAdmin")" class="glyphicon glyphicon-tag"><span>Gestione ruoli</span></a></div></li>
                    <li><div><a href="@Url.Action("Index", "UsersAdmin")" class="glyphicon glyphicon-user"><span>Gestione utenti</span></a></div></li>
                    <li><div><a href="@Url.Action("Index", "Menus")" class="glyphicon glyphicon-option-horizontal"><span>Gestione menu</span></a></div></li>
                    <li><div><a href="@Url.Action("Index", "Splashes")" class="glyphicon glyphicon-credit-card"><span>Gestione splash</span></a></div></li>
                    <li><div><a href="@Url.Action("Index", "Documentis")" class="fa fa-file-pdf-o"><span>Gestione documenti</span></a></div></li>
               </ul>
            </div>
        </div>
    </div>
}
@*Fine barra barra amministratore bottom - gestione utenti ruoli*@

    @if (ViewBag.Title == "Home")
    {
        <div id="bg">
        </div>
    }
    else
    {
        <div id="bg1">

        </div>
    }
        <div class="container body-content">

            @RenderBody()
            @if (!User.IsInRole("Admin"))
            {
                <footer>

                    <div class="navbar-fixed-bottom foot">
                        <a href="@Url.Action("Index", "Home")" class="pull-left"><img class="img-logo-header" src="~/Content/Immagini/LogoHeaderBianco.png" /></a>
                        <p>
                            <strong>Associazione ST Camen</strong><br /><span>Via S. Cristoforo, 3-5 20144 Milano - P.I.: 04855900967 C.F.: 97380760153</span>

                            <span class="pull-right">
                                <a href="http://www.cr-consult.eu"> <span>Almish<span style="color:#FF0000" lang="it">&amp;</span>Cesàre<span style="color:#FF0000">W</span>eb</span></a>

                            </span>
                        </p>
                   </div>
                </footer>

            }
                @*<footer>
                <div class="pull-left">
                    &copy; @DateTime.Now.Year - CAMEN Web-Application<br />
                    <a href="mailto:info@camen.it" class="glyphicon glyphicon-envelope"> info@camen.it</a><br />
                    <strong>Associazione ST Camen</strong><br />
                    <h5>
                        <em>
                            Via S. Cristoforo, 3-5 20144 Milano<br />
                            P.I.: 04855900967 C.F.: 97380760153
                        </em><br />
                        Tel.: 000 000000
                    </h5>
                </div>
                <div class="pull-right">
                    <a href="http://www.cr-consult.eu"> <span>Almish<span style="color:#FF0000" lang="it">&amp;</span>Cesàre<span style="color:#FF0000">W</span>eb</span></a>

                </div>

            </footer>*@
            </div>

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)
        <script src="~/Scripts/jquery.filtertable.min.js"></script>
        <script>
            $(document).ready(function () {
                $('table').filterTable();
            });
        </script>
</body>
</html>

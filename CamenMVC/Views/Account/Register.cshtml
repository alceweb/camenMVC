@model CamenMVC.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>Crea un nuovo account - Create a new account</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Questo sarà anche il tuo username" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <hr class="hr1"/>
    <div class="form-group">
        @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Cognome, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Cognome, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Indirizzo, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Indirizzo, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Telefono, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Professione, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Professione, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Organizzazione, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Organizzazione, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Ruolo, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="btn-group" data-toggle="buttons">
                @Html.RadioButtonFor(m => m.Ruolo, "Insegnante") Insegnante
                @Html.RadioButtonFor(m => m.Ruolo, "Studente") Studente
                @Html.RadioButtonFor(m => m.Ruolo, "Congressista") Congressista
                @Html.RadioButtonFor(m => m.Ruolo, "Altro", new { @checked = "checked" }) Altro
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Note, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Note, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Privacy, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <h4>
                @Html.CheckBoxFor(m => m.Privacy)
                <a href="http://www.crctest.cloud/Content/Documenti/Privacy-V1.pdf?id=21" target="_blank"><span class="fa fa-file-pdf-o"></span></a>
                <br />Dichiaro di aver preso visione del <a href="http://www.crctest.cloud/Content/Documenti/Privacy-V1.pdf?id=21" target="_blank"> documento della privacy</a>
            </h4>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Invia" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    // estensione per validare checkbox con valore true
    var defaultRangeValidator = $.validator.methods.range;
    $.validator.methods.range = function (value, element, param) {
        if (element.type === 'checkbox') {
            // se è chekced restituisco true
            return element.checked;
        } else {
            // altrimenti il default validation function
            return defaultRangeValidator.call(this, value, element, param);
        }
    }
</script>
}
